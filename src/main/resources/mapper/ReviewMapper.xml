<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hu.bookmarker.api.review.mapper.IReviewMapper">

  <select id="selectMyReview" parameterType="hu.bookmarker.api.review.model.ReviewDTO" resultType="hu.bookmarker.api.review.model.ReviewDTO">
  /* IReviewMapper.selectMyReview : 나의 리뷰 조회  */
  SELECT REVIEW_ID
       , USER_ID
       , ISBN
       , REVIEW_RATING
       , REVIEW_TEXT
       , REG_DTM
       , MOD_DTM
    FROM REVIEWS
   WHERE USER_ID = #{userId}
     AND ISBN = #{isbn}
  </select>

  <select id="selectReviews" parameterType="hu.bookmarker.api.review.model.ReviewDTO" resultType="hu.bookmarker.api.review.model.ReviewDTO">
  /* IReviewMapper.selectReviews : 리뷰 목록 조회  */
  SELECT A.REVIEW_ID
       , A.REVIEW_RATING
       , A.ISBN
       , B.TITLE
       , B.IMAGE
       , B.BOOK_SRNO
       , A.REG_DTM
       , A.MOD_DTM
    FROM REVIEWS A
    JOIN BOOKS B
      ON A.ISBN = B.ISBN
   WHERE A.USER_ID = #{userId}
   ORDER BY A.REG_DTM DESC
  </select>

  <insert id="insertMyReview" parameterType="hu.bookmarker.api.review.model.ReviewDTO">
  /* IBookMapper.insertMyReview : 나의 리뷰 등록 */
  INSERT INTO REVIEWS (
         USER_ID
       , ISBN
       , REVIEW_RATING
       , REVIEW_TEXT
       , REG_DTM
       , MOD_DTM
  ) VALUES (
         #{userId}
       , #{isbn}
       , #{reviewRating}
       , #{reviewText}
       , NOW()
       , NOW()
  )
  </insert>

  <update id="updateMyReview" parameterType="hu.bookmarker.api.review.model.ReviewDTO">
  /* IReviewMapper.updateMyReview : 나의 리뷰 수정 */
  UPDATE REVIEWS
     SET REVIEW_RATING = #{reviewRating}
       , REVIEW_TEXT = #{reviewText}
       , MOD_DTM = NOW()
   WHERE USER_ID = #{userId}
     AND REVIEW_ID = #{reviewId}
  </update>
  
  <delete id="deleteMyReview" parameterType="hu.bookmarker.api.review.model.ReviewDTO">
  /* IReviewMapper.deleteMyReview : 나의 리뷰 삭제 */
  DELETE FROM REVIEWS
   WHERE USER_ID = #{userId}
     AND REVIEW_ID = #{reviewId} 
  </delete>

  <select id="selectMyRating" parameterType="hu.bookmarker.api.review.model.ReviewDTO" resultType="hu.bookmarker.api.review.model.ReviewRatingDTO">
  /* IReviewMapper.selectMyReview : 나의 별점 조회  */
  SELECT CONCAT(A.RATING, '점') AS REVIEW_RATING
       , COUNT(B.REVIEW_RATING) AS COUNT
    FROM (SELECT 1 AS RATING 
           UNION SELECT 2 
           UNION SELECT 3 
           UNION SELECT 4 
           UNION SELECT 5
       ) A
    LEFT JOIN REVIEWS B
      ON A.RATING = B.REVIEW_RATING 
     AND B.USER_ID = #{userId}
   GROUP BY A.RATING
   ORDER BY A.RATING
  </select>
</mapper>